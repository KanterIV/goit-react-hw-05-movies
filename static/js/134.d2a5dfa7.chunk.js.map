{"version":3,"file":"static/js/134.d2a5dfa7.chunk.js","mappings":"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","sources":["components/Services/api.js","components/TrendingMovies/TrendingMovies.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'b9ef7946a51322c370f5716b1574be31';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`${BASE_URL}trending/all/day`);\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`${BASE_URL}movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await axios.get(`${BASE_URL}movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`${BASE_URL}movie/${id}/reviews`);\n  return data;\n};\n\nexport const getMoviesbySearchQuery = async query => {\n  const { data } = await axios.get(`${BASE_URL}search/movie?query=${query}`);\n  return data;\n};\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst TrendingMovies = ({ movies }) => {\n  const defaultImage =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  const location = useLocation();\n\n  return (\n    <ul className=\"trending-list\">\n      {movies &&\n        movies.map(({ id, poster_path, title, name }) => (\n          <li className=\"trending-item\" key={id}>\n            <Link\n              state={{ from: location }}\n              className=\"trending-link\"\n              to={`/movies/${id}`}\n            >\n              <img\n                className=\"trending-item-img\"\n                width={300}\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                    : defaultImage\n                }\n                alt={`Card to ${title}`}\n              />\n              <h2 className=\"trending-item-title\">{title ? title : name}</h2>\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default TrendingMovies;\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Grid } from 'react-loader-spinner';\nimport TrendingMovies from 'components/TrendingMovies/TrendingMovies';\nimport { getMoviesbySearchQuery } from 'components/Services/api';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchMovies, setSearchMovies] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    const fetchMoviesBySearchQuery = async () => {\n      try {\n        if (!query) return;\n        setIsLoading(true);\n        const data = await getMoviesbySearchQuery(query);\n\n        setSearchMovies(data.results);\n      } catch (error) {\n        setError(\n          toast.error('Sorry, something went wrong. Try again!', {\n            theme: 'colored',\n          })\n        );\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMoviesBySearchQuery();\n  }, [query]);\n\n  const handleSearchFormSubmit = event => {\n    event.preventDefault();\n    const searchQuery = event.currentTarget.elements.searchMovieByName.value;\n    setSearchParams({ query: searchQuery });\n    event.currentTarget.reset();\n  };\n\n  return (\n    <>\n      <form className=\"search-form\" onSubmit={handleSearchFormSubmit}>\n        <label className=\"search-form-lable\">\n          <p className=\"search-form-text\">Search movie by name</p>\n          <input\n            className=\"search-form-input\"\n            type=\"text\"\n            name=\"searchMovieByName\"\n          />\n        </label>\n        <button className=\"search-form-submit\">Search</button>\n      </form>\n      {isLoading && (\n        <Grid\n          height=\"80\"\n          width=\"80\"\n          color=\"#4fa94d\"\n          ariaLabel=\"grid-loading\"\n          radius=\"12.5\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n        />\n      )}\n      {error && <ToastContainer />}\n      {searchMovies.length > 0 && <TrendingMovies movies={searchMovies} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","axios","api_key","getTrendingMovies","data","getMovieById","id","getMovieCredits","getMovieReviews","getMoviesbySearchQuery","query","movies","location","useLocation","className","map","poster_path","title","name","state","from","to","width","src","alt","useSearchParams","searchParams","setSearchParams","useState","searchMovies","setSearchMovies","isLoading","setIsLoading","error","setError","get","useEffect","fetchMoviesBySearchQuery","results","toast","theme","onSubmit","event","preventDefault","searchQuery","currentTarget","elements","searchMovieByName","value","reset","type","height","color","ariaLabel","radius","wrapperStyle","wrapperClass","visible","length"],"sourceRoot":""}