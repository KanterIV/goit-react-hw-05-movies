{"version":3,"file":"static/js/415.afb43efd.chunk.js","mappings":"8SAEMA,EAAW,gCAEjBC,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,oCAOT,IAAMC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,UAAaD,EAAb,qBADQ,uBACvBI,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBC,EAAY,mCAAG,WAAMC,GAAN,yFACHL,EAAAA,EAAAA,IAAA,UAAaD,EAAb,iBAA8BM,IAD3B,uBAClBF,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZG,EAAe,mCAAG,WAAMD,GAAN,yFACNL,EAAAA,EAAAA,IAAA,UAAaD,EAAb,iBAA8BM,EAA9B,aADM,uBACrBF,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfI,EAAe,mCAAG,WAAMF,GAAN,yFACNL,EAAAA,EAAAA,IAAA,UAAaD,EAAb,iBAA8BM,EAA9B,aADM,uBACrBF,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfK,EAAsB,mCAAG,WAAMC,GAAN,yFACbT,EAAAA,EAAAA,IAAA,UAAaD,EAAb,8BAA2CU,IAD9B,uBAC5BN,EAD4B,EAC5BA,KAD4B,kBAE7BA,GAF6B,2CAAH,qD,2DCSnC,IAlCuB,SAAC,GAAgB,IAAdO,EAAa,EAAbA,OAIlBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAU,gBAAd,SACGH,GACCA,EAAOI,KAAI,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,KAA3B,OACT,eAAIJ,UAAU,gBAAd,UACE,UAAC,KAAD,CACEK,MAAO,CAAEC,KAAMR,GACfE,UAAU,gBACVO,GAAE,kBAAaf,GAHjB,WAKE,gBACEQ,UAAU,oBACVQ,MAAO,IACPC,IACEP,EAAW,0CAC4BA,GAnBrD,8EAsBYQ,IAAG,kBAAaP,MAElB,eAAIH,UAAU,sBAAd,SAAqCG,GAAgBC,QAhBtBZ,EAD1B,KAuBlB,C,mICkBD,UA9Ca,WACX,OAAkDmB,EAAAA,EAAAA,UAAS,IAA3D,eAAOC,EAAP,KAA0BC,EAA1B,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,sGAExBJ,GAAa,GAFW,UAGE1B,EAAAA,EAAAA,MAHF,gBAGhB+B,EAHgB,EAGhBA,QAERP,EAAqBO,GALG,gDAOxBH,EACEI,EAAAA,GAAAA,MAAY,0CAA2C,CACrDC,MAAO,aATa,yBAaxBP,GAAa,GAbW,4EAAH,qDAgBzBI,GACD,GAAE,KAGD,iCACE,eAAInB,UAAU,QAAd,SAAsB,mBACrBc,IACC,SAAC,KAAD,CACES,OAAO,KACPf,MAAM,KACNgB,MAAM,UACNC,UAAU,eACVC,OAAO,OACPC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,IAGZb,IAAS,SAAC,KAAD,KACV,SAAC,IAAD,CAAgBnB,OAAQe,MAG7B,C","sources":["components/Services/api.js","components/TrendingMovies/TrendingMovies.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'b9ef7946a51322c370f5716b1574be31';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`${BASE_URL}trending/all/day`);\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`${BASE_URL}movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await axios.get(`${BASE_URL}movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`${BASE_URL}movie/${id}/reviews`);\n  return data;\n};\n\nexport const getMoviesbySearchQuery = async query => {\n  const { data } = await axios.get(`${BASE_URL}search/movie?query=${query}`);\n  return data;\n};\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst TrendingMovies = ({ movies }) => {\n  const defaultImage =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  const location = useLocation();\n\n  return (\n    <ul className=\"trending-list\">\n      {movies &&\n        movies.map(({ id, poster_path, title, name }) => (\n          <li className=\"trending-item\" key={id}>\n            <Link\n              state={{ from: location }}\n              className=\"trending-link\"\n              to={`/movies/${id}`}\n            >\n              <img\n                className=\"trending-item-img\"\n                width={300}\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                    : defaultImage\n                }\n                alt={`Card to ${title}`}\n              />\n              <h2 className=\"trending-item-title\">{title ? title : name}</h2>\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default TrendingMovies;\n","import React, { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'components/Services/api';\nimport TrendingMovies from 'components/TrendingMovies/TrendingMovies';\nimport { Grid } from 'react-loader-spinner';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Home = () => {\n  const [trendingMoviesArr, setTrendingMoviesArr] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        setIsLoading(true);\n        const { results } = await getTrendingMovies();\n\n        setTrendingMoviesArr(results);\n      } catch (error) {\n        setError(\n          toast.error('Sorry, something went wrong. Try again!', {\n            theme: 'colored',\n          })\n        );\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">Trending today</h1>\n      {isLoading && (\n        <Grid\n          height=\"80\"\n          width=\"80\"\n          color=\"#4fa94d\"\n          ariaLabel=\"grid-loading\"\n          radius=\"12.5\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n        />\n      )}\n      {error && <ToastContainer />}\n      <TrendingMovies movies={trendingMoviesArr} />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["BASE_URL","axios","api_key","getTrendingMovies","data","getMovieById","id","getMovieCredits","getMovieReviews","getMoviesbySearchQuery","query","movies","location","useLocation","className","map","poster_path","title","name","state","from","to","width","src","alt","useState","trendingMoviesArr","setTrendingMoviesArr","isLoading","setIsLoading","error","setError","useEffect","fetchTrendingMovies","results","toast","theme","height","color","ariaLabel","radius","wrapperStyle","wrapperClass","visible"],"sourceRoot":""}