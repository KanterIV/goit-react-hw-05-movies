{"version":3,"file":"static/js/957.6f1a03c4.chunk.js","mappings":"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","sources":["components/Services/api.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'b9ef7946a51322c370f5716b1574be31';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`${BASE_URL}trending/all/day`);\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`${BASE_URL}movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await axios.get(`${BASE_URL}movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`${BASE_URL}movie/${id}/reviews`);\n  return data;\n};\n\nexport const getMoviesbySearchQuery = async query => {\n  const { data } = await axios.get(`${BASE_URL}search/movie?query=${query}`);\n  return data;\n};\n","import React from 'react';\n\nconst MovieCard = ({ movie }) => {\n  const { title, name, poster_path, overview, genres, vote_average } = movie;\n  const defaultImage =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  return (\n    <div className=\"card-wraper\">\n      <img\n        className=\"card-img\"\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n            : defaultImage\n        }\n        width={300}\n        alt={`poster to movie: ${title}`}\n      />\n      <div className=\"card-info-wrapper\">\n        <h1>{title ? title : name}</h1>\n        <p>User Score: {vote_average}</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n\n        {genres && (\n          <>\n            <h2>Genres</h2>\n            <ul className=\"genres-list\">\n              {genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </ul>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MovieCard;\n","import { getMovieById } from 'components/Services/api';\nimport React, { useEffect, useRef, useState } from 'react';\nimport {\n  NavLink,\n  Route,\n  Routes,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Grid } from 'react-loader-spinner';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { lazy } from 'react';\nimport { Suspense } from 'react';\n\nconst Casts = lazy(() => import('components/Casts/Casts'));\nconst Reviews = lazy(() => import('components/Reviews/Reviews'));\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  const [movieCard, setMovieCard] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieById = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getMovieById(movieId);\n\n        setMovieCard(data);\n      } catch (error) {\n        setError(\n          toast.error('Sorry, something went wrong. Try again!', {\n            theme: 'colored',\n          })\n        );\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieById();\n  }, [movieId]);\n\n  return (\n    <>\n      <NavLink className=\"backLink\" to={backLinkHref.current}>\n        Go back\n      </NavLink>\n      {isLoading && (\n        <Grid\n          height=\"80\"\n          width=\"80\"\n          color=\"#4fa94d\"\n          ariaLabel=\"grid-loading\"\n          radius=\"12.5\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n        />\n      )}\n      {error && <ToastContainer />}\n\n      {movieCard && <MovieCard movie={movieCard} />}\n      <div className=\"additional-wrapper\">\n        <h3 className=\"adittional-title\"> Additional information</h3>\n        <ul className=\"adittional-list\">\n          <li className=\"adittional-item\">\n            <NavLink to=\"cast\">Casts</NavLink>\n          </li>\n          <li className=\"adittional-item\">\n            <NavLink to=\"reviews\">Reviews</NavLink>\n          </li>\n        </ul>\n      </div>\n\n      <Suspense\n        fallback={\n          <Grid\n            height=\"80\"\n            width=\"80\"\n            color=\"#4fa94d\"\n            ariaLabel=\"grid-loading\"\n            radius=\"12.5\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n          />\n        }\n      >\n        <Routes>\n          <Route path=\"cast\" element={<Casts />} />\n          <Route path=\"reviews\" element={<Reviews />} />\n        </Routes>\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","axios","api_key","getTrendingMovies","data","getMovieById","id","getMovieCredits","getMovieReviews","getMoviesbySearchQuery","query","movie","title","name","poster_path","overview","genres","vote_average","className","src","width","alt","map","genre","Casts","lazy","Reviews","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useState","movieCard","setMovieCard","isLoading","setIsLoading","error","setError","useEffect","fetchMovieById","toast","theme","to","current","height","color","ariaLabel","radius","wrapperStyle","wrapperClass","visible","Suspense","fallback","path","element"],"sourceRoot":""}